# This workflow will build and pack the latest version of the application
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build And Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:
  check_merge_status:
    name: Check PR Merge Status
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Merge Status OK
        run: echo "PR was merged successfully!"

  build-and-release:
    runs-on: windows-latest
    name: Build And Create Release
    needs: [check_merge_status]

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      ROOT_SOLUTION_FILE: ${{ github.workspace }}/src/WebApplications.sln

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup GitVersion Tools (6.0.x)
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '6.0.x'
        
    - name: Determine Build Version
      uses: gittools/actions/gitversion/execute@v3
      with:
        updateAssemblyInfo: true

    - name: Setup Node.js (18.x)
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
      
    - name: Setup MSBuild (Latest)
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: latest

    - name: Setup MSBuild Logger
      run: |
        Invoke-WebRequest -Uri https://github.com/reupen/msbuild-github-logger/releases/download/v1.0.1/Reupen.MSBuild.GitHubLogger.dll -OutFile "$Env:Temp\Reupen.MSBuild.GitHubLogger.dll"
        
    - name: Setup NuGet.exe CLI (6.x)
      uses: NuGet/setup-nuget@v2
      with:
        nuget-version: 6.x

    - name: Setup NuGet Packages Cache
      uses: actions/cache@v4
      id: nuget-cache
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**\packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Solution Packages
      run: nuget restore "${{ env.ROOT_SOLUTION_FILE }}"

    - name: Build Solution Projects
      run: |
        msbuild "${{ env.ROOT_SOLUTION_FILE }}" /m /nologo /nr:false /logger:"$Env:Temp\Reupen.MSBuild.GitHubLogger.dll" /p:SkipInvalidConfigurations=true /p:platform="x86" /p:configuration="Release" /p:VisualStudioVersion="17.0" /p:DeployOnBuild=true /p:PublishProfile=ZipDeployArtifact /p:ExcludeGeneratedDebugSymbol=true

    - name: '[DEBUG] Duplicate Deployment Folders'
      working-directory: ./artifacts
      run: |-
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-manager-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-services-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-feeds-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-accounts-zipdeploy" -Recurse

    - name: Create Deployment Artifacts
      working-directory: ./artifacts
      shell: cmd
      run: |
        for /d %%X in (*) do "7z" a "%%X.zip" ".\%%X\*"

    - name: Create New Release And Tag
      uses: ncipollo/release-action@v1
      env:
        TAG_NAME: ${{ format('v{0}', env.GitVersion_MajorMinorPatch) }}
      with:
        artifactErrorsFailBuild: true
        generateReleaseNotes: true
        commit: main
        tag: ${{ env.TAG_NAME }}
        name: Framework SDK ${{ env.TAG_NAME }}
        body: |
          A Release atual contém a versão mais recente do SDK da Plataforma Fastchannel,
          e foi compilado para ser executado a partir do uso do .NET Framework v4.8.1.
        artifacts: artifacts/*.zip

    - name: Dispatch Deployment Request
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: ci-deployment-requested
        client-payload: |-
          {
            "github": {
              "event_name": "${{ github.event_name }}",
              "ref": "${{ github.ref }}",
              "ref_name": "${{ github.ref_name }}",
              "ref_type": "${{ github.ref_type }}",
              "sha": "${{ github.sha }}"
            },
            "environment": "B2B Dev",
            "release_version": "${{ format('v{0}', env.GitVersion_MajorMinorPatch) }}",
            "run_name": "${{ format('v{0}', env.GitVersion_MajorMinorPatch) }}"
          }
