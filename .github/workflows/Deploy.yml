# This workflow will deploy a specific build artifact into selected Azure App Services
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy To Azure App Services

run-name: >-
  ${{ format('Deploying {0} into Azure AppServices{1} {2}',
    ((github.event_name == 'repository_dispatch' && github.event.client_payload.is-pre-release == 'true') || (!startsWith(github.ref, 'refs/tags/v')) && '[Unversioned Build]' || (github.event.client_payload.github.ref_name || github.ref_name),
    ':', inputs.environment || github.event.client_payload.environment) }}

on:
  repository_dispatch:
    types: [deploy-artifacts]

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy'
        type: environment
        default: 'B2B Dev'
        required: true
      artifacts-name:
        description: 'Artifacts'
        type: choice
        default: 'ZipDeployPackages'
        required: true
        options:
          - ZipDeployPackages
      deploy-to-webstore:
        description: 'Deploy to WebStore'
        type: boolean
        default: true
        required: true
      deploy-to-webportal:
        description: 'Deploy to WebPortal'
        type: boolean
        default: true
        required: true
      deploy-to-webservices:
        description: 'Deploy to WebServices'
        type: boolean
        default: true
        required: true
      deploy-to-webfeeds:
        description: 'Deploy to WebFeeds'
        type: boolean
        default: false
      deploy-to-webaccounts:
        description: 'Deploy to WebAccounts'
        type: boolean
        default: false

jobs:
  environment-details:
    uses: ./.github/workflows/Environments.yml
    name: Set Environment Details
    with:
      environment-name: ${{ github.event.inputs.environment || github.event.client_payload.environment }}

  resolve-deploy-artifacts:
    runs-on: windows-latest
    name: Resolve Deploy Artifacts
    steps:

    - name: Download All Build Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        github_token: ${{ secrets.FASTCHANNEL_MIRANDAASM_PAT }}
        workflow: Build.yml
        workflow_conclusion: success
        name: ${{ github.event.inputs.artifacts-name || github.event.client_payload.artifacts-name }}
        path: ./artifacts
    
    - name: Debug All Deploy Artifacts
      working-directory: ./artifacts
      run: |
        Get-ChildItem -Path . -Recurse

    - name: Upload WebStore Artifact
      if: ${{ inputs.deploy-to-webstore || github.event_name == 'repository_dispatch' }}
      uses: actions/upload-artifact@v4
      with:        
        name: webstore
        path: artifacts/fastchannel-webstore-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebPortal Artifact
      if: ${{ inputs.deploy-to-webportal || github.event_name == 'repository_dispatch' }}
      uses: actions/upload-artifact@v4
      with:        
        name: manager
        path: artifacts/fastchannel-manager-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebServices Artifact
      if: ${{ inputs.deploy-to-webservices || github.event_name == 'repository_dispatch' }}
      uses: actions/upload-artifact@v4
      with:        
        name: services
        path: artifacts/fastchannel-services-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebFeeds Artifact
      if: ${{ inputs.deploy-to-webfeeds || github.event_name == 'repository_dispatch' }}
      uses: actions/upload-artifact@v4
      with:        
        name: feeds
        path: artifacts/fastchannel-feeds-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebAccounts Artifact
      if: ${{ inputs.deploy-to-webaccounts }}
      uses: actions/upload-artifact@v4
      with:        
        name: accounts
        path: artifacts/fastchannel-accounts-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

  appservice-deployment:
    needs: [environment-details, resolve-deploy-artifacts]
    name: Deploy [${{ matrix.appservice }}] for [${{ needs.environment-details.outputs.name }}]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    if: >-
      ${{ (matrix.appservice == 'webstore' && (inputs.deploy-to-webstore || github.event_name == 'repository_dispatch')) ||
          (matrix.appservice == 'manager' && (inputs.deploy-to-webportal || github.event_name == 'repository_dispatch')) || 
          (matrix.appservice == 'services' && (inputs.deploy-to-webservices || github.event_name == 'repository_dispatch')) ||
          (matrix.appservice == 'feeds' && (inputs.deploy-to-webfeeds || github.event_name == 'repository_dispatch')) ||
          (matrix.appservice == 'accounts' && inputs.deploy-to-webaccounts)) }}
    strategy:
      fail-fast: false
      matrix:
        appservice: [webstore, manager, services, feeds, accounts]
        os: [windows-latest]
    
    environment:
      name: ${{ needs.environment-details.outputs.name }}
      url: ${{ needs.environment-details.outputs.url }}

    env:
      APPSERVICE_NAME: ${{ format('fastchannel-{0}-{1}', matrix.appservice, vars.ENVIRONMENT_ID) }}
      APPSERVICE_PACKAGE: ${{ github.workspace }}/artifacts/fastchannel-${{ matrix.appservice }}-zipdeploy.zip

    steps:
    - name: Download [${{ matrix.appservice }}] Artifact
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: ./artifacts
        name: ${{ matrix.appservice }}

    - name: Login via Azure CLI
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy To Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.APPSERVICE_NAME }}
        package: ${{ env.APPSERVICE_PACKAGE }}
