# This workflow will build and pack the latest version of the application
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Only

on:
  pull_request:
    branches:
      - main
      - dev

jobs:

  build:
    runs-on: windows-latest
    name: Build Framework SDK

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      ROOT_SOLUTION_FILE: ${{ github.workspace }}/src/WebApplications.sln

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup Node.js (18.x)
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
      
    - name: Setup MSBuild (Latest)
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: latest

    - name: Setup MSBuild Logger
      run: |
        Invoke-WebRequest -Uri https://github.com/reupen/msbuild-github-logger/releases/download/v1.0.1/Reupen.MSBuild.GitHubLogger.dll -OutFile "$Env:Temp\Reupen.MSBuild.GitHubLogger.dll"
        
    - name: Setup NuGet.exe CLI (6.x)
      uses: NuGet/setup-nuget@v2
      with:
        nuget-version: 6.x

    - name: Setup NuGet Packages Cache
      uses: actions/cache@v4
      id: nuget-cache
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**\packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Solution Packages
      run: nuget restore "${{ env.ROOT_SOLUTION_FILE }}"

    - name: Build Solution Projects
      run: |
        msbuild "${{ env.ROOT_SOLUTION_FILE }}" /m /nologo /nr:false /logger:"$Env:Temp\Reupen.MSBuild.GitHubLogger.dll" /p:SkipInvalidConfigurations=true /p:platform="x86" /p:configuration="Release" /p:VisualStudioVersion="17.0" /p:DeployOnBuild=true /p:PublishProfile=ZipDeployArtifact /p:ExcludeGeneratedDebugSymbol=true
