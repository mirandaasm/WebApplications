# This workflow will build and pack the latest version of the application
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build And Pack Latest Version

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  build:

    runs-on: windows-latest

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      ROOT_SOLUTION_FILE: ${{ github.workspace }}/src/WebApplications.sln
      WEBSTORE_CSPROJECT_FILE: ${{ github.workspace }}/src/WebStore/WebStore.csproj
      MSBUILD_LOGGER_FILE: ${{ github.workspace }}/temp/Reupen.MSBuild.GitHubLogger.dll
      ARTIFACTS_STAGING_DIR: ${{ github.workspace }}/artifacts
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup GitVersion Tools (6.0.x)
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '6.0.x'
        
    - name: Determine Build Version
      uses: gittools/actions/gitversion/execute@v3
      with:
        updateAssemblyInfo: true

    - name: Setup Node.js (18.x)
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
      
    - name: Setup MSBuild (Latest)
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: latest

    - name: Setup MSBuild Logger
      run: |
        Invoke-WebRequest -Uri https://github.com/reupen/msbuild-github-logger/releases/download/v1.0.1/Reupen.MSBuild.GitHubLogger.dll -OutFile "$Env:Temp\Reupen.MSBuild.GitHubLogger.dll"
        
    - name: Setup NuGet.exe CLI (6.x)
      uses: NuGet/setup-nuget@v2
      with:
        nuget-version: 6.x

    - name: Setup NuGet Packages Cache
      uses: actions/cache@v4
      id: nuget-cache
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**\packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Solution Packages
      run: nuget restore "${{ env.ROOT_SOLUTION_FILE }}"

    - name: Build Solution Projects
      run: |
        msbuild "${{ env.ROOT_SOLUTION_FILE }}" /m /nologo /nr:false /logger:"$Env:Temp\Reupen.MSBuild.GitHubLogger.dll" /p:SkipInvalidConfigurations=true /p:platform="x86" /p:configuration="Release" /p:VisualStudioVersion="17.0" /p:DeployOnBuild=true /p:PublishProfile=ZipDeployArtifact /p:ExcludeGeneratedDebugSymbol=true

    - name: '[DEBUG] Duplicate Deployment Folders'
      working-directory: ./artifacts
      run: |-
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-manager-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-services-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-feeds-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-accounts-zipdeploy" -Recurse

    - name: Create Deployment Artifacts
      working-directory: ./artifacts
      shell: cmd
      run: |
        for /d %%X in (*) do "7z" a "%%X.zip" ".\%%X\*"

    - name: Upload Deployment Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ZipDeployPackages
        path: artifacts/*.zip
        if-no-files-found: error
        compression-level: 0

    - name: Create New Version Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        name: Framework SDK ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
        files: artifacts/*.zip
        body: |
          A Release atual contém a versão mais recente do SDK da Plataforma Fastchannel,
          e foi compilado para ser executado a partir do uso do .NET Framework v4.8.1.
        draft: false
        prerelease: false
        make_latest: true
        generate_release_notes: true

    - name: New Deployment Artifacts Available
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: new-deploy-artifacts-available
        client-payload: |-
          {
            "github": {
              "event_name": "${{ github.event_name }}",
              "ref": "${{ github.ref }}",
              "ref_name": "${{ github.ref_name }}",
              "ref_type": "${{ github.ref_type }}",
              "sha": "${{ github.sha }}"
            },
            "is-pre-release": ${{ ! startsWith(github.ref, 'refs/tags/v') }},
            "version-number": "${{ env.GitVersion_MajorMinorPatch }}",
            "artifacts-name": "ZipDeployPackages",
            "environment": "B2B Dev"
          }
