# This workflow will build and pack the latest version of the application
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build And Pack New Artifacts

on:
  workflow_call:
    inputs:
      skip_deployment:
        description: 'Skip Deployment'
        type: boolean
        default: false
        required: false

  workflow_dispatch:
    inputs:
      skip_deployment:
        description: 'Skip Deployment'
        type: boolean
        default: false

permissions:
  actions: write
  contents: write
  pull-requests: write

env:
  IS_NEW_RELEASE: ${{ (github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'refs/heads/main') && 'true' || 'false' }}

jobs:
  build:
    runs-on: windows-latest
    name: Build And Pack New Artifacts

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      ROOT_SOLUTION_FILE: ${{ github.workspace }}/src/WebApplications.sln

    steps:
    - name: '[DEBUG] Show variables!'
      run: echo "IS_NEW_RELEASE=${{ env.IS_NEW_RELEASE }}"
  
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup GitVersion Tools (6.0.x)
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '6.0.x'
        
    - name: Determine Build Version
      uses: gittools/actions/gitversion/execute@v3
      with:
        updateAssemblyInfo: true

    - name: Setup Node.js (18.x)
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
      
    - name: Setup MSBuild (Latest)
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: latest

    - name: Setup MSBuild Logger
      run: |
        Invoke-WebRequest -Uri https://github.com/reupen/msbuild-github-logger/releases/download/v1.0.1/Reupen.MSBuild.GitHubLogger.dll -OutFile "$Env:Temp\Reupen.MSBuild.GitHubLogger.dll"
        
    - name: Setup NuGet.exe CLI (6.x)
      uses: NuGet/setup-nuget@v2
      with:
        nuget-version: 6.x

    - name: Setup NuGet Packages Cache
      uses: actions/cache@v4
      id: nuget-cache
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**\packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Solution Packages
      run: nuget restore "${{ env.ROOT_SOLUTION_FILE }}"

    - name: Build Solution Projects
      run: |
        msbuild "${{ env.ROOT_SOLUTION_FILE }}" /m /nologo /nr:false /logger:"$Env:Temp\Reupen.MSBuild.GitHubLogger.dll" /p:SkipInvalidConfigurations=true /p:platform="x86" /p:configuration="Release" /p:VisualStudioVersion="17.0" /p:DeployOnBuild=true /p:PublishProfile=ZipDeployArtifact /p:ExcludeGeneratedDebugSymbol=true

    - name: '[DEBUG] Duplicate Deployment Folders'
      working-directory: ./artifacts
      run: |-
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-manager-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-services-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-feeds-zipdeploy" -Recurse
        Copy-Item -Path "fastchannel-webstore-zipdeploy" -Destination "fastchannel-accounts-zipdeploy" -Recurse

    - name: Create Deployment Artifacts
      working-directory: ./artifacts
      shell: cmd
      run: |
        for /d %%X in (*) do "7z" a "%%X.zip" ".\%%X\*"

    - name: Upload WebStore Artifact
      uses: actions/upload-artifact@v4
      if: env.IS_NEW_RELEASE != 'true'
      with:
        name: fastchannel-webstore-zipdeploy
        path: artifacts/fastchannel-webstore-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebPortal Artifact
      uses: actions/upload-artifact@v4
      if: env.IS_NEW_RELEASE != 'true'
      with:
        name: fastchannel-manager-zipdeploy
        path: artifacts/fastchannel-manager-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebServices Artifact
      uses: actions/upload-artifact@v4
      if: env.IS_NEW_RELEASE != 'true'
      with:
        name: fastchannel-services-zipdeploy
        path: artifacts/fastchannel-services-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebFeeds Artifact
      uses: actions/upload-artifact@v4
      if: env.IS_NEW_RELEASE != 'true'
      with:
        name: fastchannel-feeds-zipdeploy
        path: artifacts/fastchannel-feeds-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Upload WebAccounts Artifact
      uses: actions/upload-artifact@v4
      if: env.IS_NEW_RELEASE != 'true'
      with:
        name: fastchannel-accounts-zipdeploy
        path: artifacts/fastchannel-accounts-zipdeploy.zip
        if-no-files-found: error
        compression-level: 0

    - name: Create New Release And Tag
      uses: ncipollo/release-action@v1
      if: env.IS_NEW_RELEASE == 'true'
      env:
        TAG_NAME: ${{ format('v{0}', env.GitVersion_MajorMinorPatch) }}
      with:
        artifactErrorsFailBuild: true
        generateReleaseNotes: true
        commit: main
        tag: ${{ env.TAG_NAME }}
        name: Framework SDK ${{ env.TAG_NAME }}
        body: |
          A Release atual contém a versão mais recente do SDK da Plataforma Fastchannel,
          e foi compilado para ser executado a partir do uso do .NET Framework v4.8.1.
        artifacts: artifacts/*.zip

    # - name: Create New Version Release
    #   if: startsWith(github.ref, 'refs/tags/v')
    #   id: create_release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     name: Framework SDK ${{ github.ref_name }}
    #     tag_name: ${{ github.ref_name }}
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     files: artifacts/*.zip
    #     body: |
    #       A Release atual contém a versão mais recente do SDK da Plataforma Fastchannel,
    #       e foi compilado para ser executado a partir do uso do .NET Framework v4.8.1.
    #     draft: false
    #     prerelease: false
    #     make_latest: true
    #     generate_release_notes: true

    - name: New Deployment Artifacts Available
      uses: peter-evans/repository-dispatch@v3
      if: inputs.skip_deployment == false
      with:
        event-type: new-deploy-artifacts-available
        client-payload: |-
          {
            "github": {
              "event_name": "${{ github.event_name }}",
              "ref": "${{ github.ref }}",
              "ref_name": "${{ github.ref_name }}",
              "ref_type": "${{ github.ref_type }}",
              "sha": "${{ github.sha }}"
            },
            "environment": "B2B Dev",
            "is_pre_release": ${{ env.IS_NEW_RELEASE != 'true' }},
            "version_number": "${{ env.GitVersion_MajorMinorPatch }}",
            "run_name": ${{ env.IS_NEW_RELEASE == 'true' && format('v{0}', env.GitVersion_MajorMinorPatch) || '[Untagged Build]' }}
          }
